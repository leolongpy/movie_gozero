// Code generated by goctl. DO NOT EDIT!
// Source: cms.proto

package cmsservice

import (
	"context"

	"movie_gozero/rpc/cms/pb"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	User                = pb.User
	AllCommentsRsp      = pb.AllCommentsRsp
	AllMovieHallRsp     = pb.AllMovieHallRsp
	UserLoginReq        = pb.UserLoginReq
	DeleteFilmRsp       = pb.DeleteFilmRsp
	AllCinemaFilmsRsp   = pb.AllCinemaFilmsRsp
	AllUsersReq         = pb.AllUsersReq
	AddAdminUserReq     = pb.AddAdminUserReq
	UpdateAddressRsp    = pb.UpdateAddressRsp
	DeleteAddressRsp    = pb.DeleteAddressRsp
	OrderAll            = pb.OrderAll
	PlaceAll            = pb.PlaceAll
	AddFilmReq          = pb.AddFilmReq
	AddCinemaFilmRsp    = pb.AddCinemaFilmRsp
	AllCinemaHallReq    = pb.AllCinemaHallReq
	AllFilmsReq         = pb.AllFilmsReq
	AllOrdersRsp        = pb.AllOrdersRsp
	DeleteAddressReq    = pb.DeleteAddressReq
	AllMovieHallReq     = pb.AllMovieHallReq
	DeleteCinemaFilmReq = pb.DeleteCinemaFilmReq
	AllCinemaHallRsp    = pb.AllCinemaHallRsp
	AllFilmsRsp         = pb.AllFilmsRsp
	AllAddressRsp       = pb.AllAddressRsp
	AddFilmRsp          = pb.AddFilmRsp
	AllOrdersReq        = pb.AllOrdersReq
	DeleteFilmReq       = pb.DeleteFilmReq
	UpdateAddressReq    = pb.UpdateAddressReq
	DeleteCinemaFilmRsp = pb.DeleteCinemaFilmRsp
	UpdateCinemaFilmReq = pb.UpdateCinemaFilmReq
	AllAdminUsersRsp    = pb.AllAdminUsersRsp
	AllAddressReq       = pb.AllAddressReq
	AddAdminUserRsp     = pb.AddAdminUserRsp
	AddMovieHallReq     = pb.AddMovieHallReq
	DeleteMovieHallReq  = pb.DeleteMovieHallReq
	DeleteMovieHallRsp  = pb.DeleteMovieHallRsp
	CinemaFilm          = pb.CinemaFilm
	Comment             = pb.Comment
	DeleteAdminUserRsp  = pb.DeleteAdminUserRsp
	HallAddressList     = pb.HallAddressList
	Place               = pb.Place
	AddMovieHallRsp     = pb.AddMovieHallRsp
	RegisterCinemaRsp   = pb.RegisterCinemaRsp
	UpdateMovieHallReq  = pb.UpdateMovieHallReq
	UpdateMovieHallRsp  = pb.UpdateMovieHallRsp
	AddCinemaFilmReq    = pb.AddCinemaFilmReq
	UpdateMessageReq    = pb.UpdateMessageReq
	DeleteAdminUserReq  = pb.DeleteAdminUserReq
	MovieHall           = pb.MovieHall
	RegisterCinemaReq   = pb.RegisterCinemaReq
	Film                = pb.Film
	AllCommentsReq      = pb.AllCommentsReq
	AddAddressRsp       = pb.AddAddressRsp
	AllCinemaFilmsReq   = pb.AllCinemaFilmsReq
	UpdateMessageRsp    = pb.UpdateMessageRsp
	AllUsersRsp         = pb.AllUsersRsp
	AllAdminUsersReq    = pb.AllAdminUsersReq
	AdminUser           = pb.AdminUser
	UpdateFilmReq       = pb.UpdateFilmReq
	UpdateFilmRsp       = pb.UpdateFilmRsp
	UpdateCinemaFilmRsp = pb.UpdateCinemaFilmRsp
	UserLoginRsp        = pb.UserLoginRsp
	AddAddressReq       = pb.AddAddressReq

	CMSService interface {
		UserLogin(ctx context.Context, in *UserLoginReq) (*UserLoginRsp, error)
		UpdateMessage(ctx context.Context, in *UpdateMessageReq) (*UpdateMessageRsp, error)
		AllFilms(ctx context.Context, in *AllFilmsReq) (*AllFilmsRsp, error)
		UpdateFilm(ctx context.Context, in *UpdateFilmReq) (*UpdateFilmRsp, error)
		DeleteFilm(ctx context.Context, in *DeleteFilmReq) (*DeleteFilmRsp, error)
		AllUsers(ctx context.Context, in *AllUsersReq) (*AllUsersRsp, error)
		AllAdminUsers(ctx context.Context, in *AllAdminUsersReq) (*AllAdminUsersRsp, error)
		AllComments(ctx context.Context, in *AllCommentsReq) (*AllCommentsRsp, error)
		AllOrders(ctx context.Context, in *AllOrdersReq) (*AllOrdersRsp, error)
		AllAddress(ctx context.Context, in *AllAddressReq) (*AllAddressRsp, error)
		AddFilm(ctx context.Context, in *AddFilmReq) (*AddFilmRsp, error)
		AddAdminUser(ctx context.Context, in *AddAdminUserReq) (*AddAdminUserRsp, error)
		AddAddress(ctx context.Context, in *AddAddressReq) (*AddAddressRsp, error)
		UpdateAddress(ctx context.Context, in *UpdateAddressReq) (*UpdateAddressRsp, error)
		DeleteAddress(ctx context.Context, in *DeleteAddressReq) (*DeleteAddressRsp, error)
		DeleteAdminUser(ctx context.Context, in *DeleteAdminUserReq) (*DeleteAdminUserRsp, error)
		AllMovieHall(ctx context.Context, in *AllMovieHallReq) (*AllMovieHallRsp, error)
		AddMovieHall(ctx context.Context, in *AddMovieHallReq) (*AddMovieHallRsp, error)
		UpdateMovieHall(ctx context.Context, in *UpdateMovieHallReq) (*UpdateMovieHallRsp, error)
		DeleteMovieHall(ctx context.Context, in *DeleteMovieHallReq) (*DeleteMovieHallRsp, error)
		AllCinemaFilms(ctx context.Context, in *AllCinemaFilmsReq) (*AllCinemaFilmsRsp, error)
		AddCinemaFilm(ctx context.Context, in *AddCinemaFilmReq) (*AddCinemaFilmRsp, error)
		UpdateCinemaFilm(ctx context.Context, in *UpdateCinemaFilmReq) (*UpdateCinemaFilmRsp, error)
		DeleteCinemaFilm(ctx context.Context, in *DeleteCinemaFilmReq) (*DeleteCinemaFilmRsp, error)
		RegisterCinema(ctx context.Context, in *RegisterCinemaReq) (*RegisterCinemaRsp, error)
		AllCinemaHall(ctx context.Context, in *AllCinemaHallReq) (*AllCinemaHallRsp, error)
	}

	defaultCMSService struct {
		cli zrpc.Client
	}
)

func NewCMSService(cli zrpc.Client) CMSService {
	return &defaultCMSService{
		cli: cli,
	}
}

func (m *defaultCMSService) UserLogin(ctx context.Context, in *UserLoginReq) (*UserLoginRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.UserLogin(ctx, in)
}

func (m *defaultCMSService) UpdateMessage(ctx context.Context, in *UpdateMessageReq) (*UpdateMessageRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.UpdateMessage(ctx, in)
}

func (m *defaultCMSService) AllFilms(ctx context.Context, in *AllFilmsReq) (*AllFilmsRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.AllFilms(ctx, in)
}

func (m *defaultCMSService) UpdateFilm(ctx context.Context, in *UpdateFilmReq) (*UpdateFilmRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.UpdateFilm(ctx, in)
}

func (m *defaultCMSService) DeleteFilm(ctx context.Context, in *DeleteFilmReq) (*DeleteFilmRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.DeleteFilm(ctx, in)
}

func (m *defaultCMSService) AllUsers(ctx context.Context, in *AllUsersReq) (*AllUsersRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.AllUsers(ctx, in)
}

func (m *defaultCMSService) AllAdminUsers(ctx context.Context, in *AllAdminUsersReq) (*AllAdminUsersRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.AllAdminUsers(ctx, in)
}

func (m *defaultCMSService) AllComments(ctx context.Context, in *AllCommentsReq) (*AllCommentsRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.AllComments(ctx, in)
}

func (m *defaultCMSService) AllOrders(ctx context.Context, in *AllOrdersReq) (*AllOrdersRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.AllOrders(ctx, in)
}

func (m *defaultCMSService) AllAddress(ctx context.Context, in *AllAddressReq) (*AllAddressRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.AllAddress(ctx, in)
}

func (m *defaultCMSService) AddFilm(ctx context.Context, in *AddFilmReq) (*AddFilmRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.AddFilm(ctx, in)
}

func (m *defaultCMSService) AddAdminUser(ctx context.Context, in *AddAdminUserReq) (*AddAdminUserRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.AddAdminUser(ctx, in)
}

func (m *defaultCMSService) AddAddress(ctx context.Context, in *AddAddressReq) (*AddAddressRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.AddAddress(ctx, in)
}

func (m *defaultCMSService) UpdateAddress(ctx context.Context, in *UpdateAddressReq) (*UpdateAddressRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.UpdateAddress(ctx, in)
}

func (m *defaultCMSService) DeleteAddress(ctx context.Context, in *DeleteAddressReq) (*DeleteAddressRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.DeleteAddress(ctx, in)
}

func (m *defaultCMSService) DeleteAdminUser(ctx context.Context, in *DeleteAdminUserReq) (*DeleteAdminUserRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.DeleteAdminUser(ctx, in)
}

func (m *defaultCMSService) AllMovieHall(ctx context.Context, in *AllMovieHallReq) (*AllMovieHallRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.AllMovieHall(ctx, in)
}

func (m *defaultCMSService) AddMovieHall(ctx context.Context, in *AddMovieHallReq) (*AddMovieHallRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.AddMovieHall(ctx, in)
}

func (m *defaultCMSService) UpdateMovieHall(ctx context.Context, in *UpdateMovieHallReq) (*UpdateMovieHallRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.UpdateMovieHall(ctx, in)
}

func (m *defaultCMSService) DeleteMovieHall(ctx context.Context, in *DeleteMovieHallReq) (*DeleteMovieHallRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.DeleteMovieHall(ctx, in)
}

func (m *defaultCMSService) AllCinemaFilms(ctx context.Context, in *AllCinemaFilmsReq) (*AllCinemaFilmsRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.AllCinemaFilms(ctx, in)
}

func (m *defaultCMSService) AddCinemaFilm(ctx context.Context, in *AddCinemaFilmReq) (*AddCinemaFilmRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.AddCinemaFilm(ctx, in)
}

func (m *defaultCMSService) UpdateCinemaFilm(ctx context.Context, in *UpdateCinemaFilmReq) (*UpdateCinemaFilmRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.UpdateCinemaFilm(ctx, in)
}

func (m *defaultCMSService) DeleteCinemaFilm(ctx context.Context, in *DeleteCinemaFilmReq) (*DeleteCinemaFilmRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.DeleteCinemaFilm(ctx, in)
}

func (m *defaultCMSService) RegisterCinema(ctx context.Context, in *RegisterCinemaReq) (*RegisterCinemaRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.RegisterCinema(ctx, in)
}

func (m *defaultCMSService) AllCinemaHall(ctx context.Context, in *AllCinemaHallReq) (*AllCinemaHallRsp, error) {
	client := pb.NewCMSServiceClient(m.cli.Conn())
	return client.AllCinemaHall(ctx, in)
}
