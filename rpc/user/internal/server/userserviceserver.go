// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package server

import (
	"context"

	"movie_gozero/rpc/user/internal/logic"
	"movie_gozero/rpc/user/internal/svc"
	"movie_gozero/rpc/user/pb"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

//  注册用户
func (s *UserServiceServer) RegistAccount(ctx context.Context, in *pb.RegistAccountReq) (*pb.RegistAccountRsp, error) {
	l := logic.NewRegistAccountLogic(ctx, s.svcCtx)
	return l.RegistAccount(in)
}

//  用户登录
func (s *UserServiceServer) LoginAccount(ctx context.Context, in *pb.LoginAccountReq) (*pb.LoginAccountRsp, error) {
	l := logic.NewLoginAccountLogic(ctx, s.svcCtx)
	return l.LoginAccount(in)
}

//  密码重置
func (s *UserServiceServer) ResetAccount(ctx context.Context, in *pb.ResetAccountReq) (*pb.ResetAccountRsp, error) {
	l := logic.NewResetAccountLogic(ctx, s.svcCtx)
	return l.ResetAccount(in)
}

// 评分
func (s *UserServiceServer) WantScore(ctx context.Context, in *pb.WantScoreReq) (*pb.WantScoreRsp, error) {
	l := logic.NewWantScoreLogic(ctx, s.svcCtx)
	return l.WantScore(in)
}

// 修改用户信息
func (s *UserServiceServer) UpdateUserProfile(ctx context.Context, in *pb.UpdateUserProfileReq) (*pb.UpdateUserProfileRsp, error) {
	l := logic.NewUpdateUserProfileLogic(ctx, s.svcCtx)
	return l.UpdateUserProfile(in)
}
