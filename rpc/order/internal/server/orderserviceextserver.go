// Code generated by goctl. DO NOT EDIT!
// Source: order.proto

package server

import (
	"context"

	"movie_gozero/rpc/order/internal/logic"
	"movie_gozero/rpc/order/internal/svc"
	"movie_gozero/rpc/order/pb"
)

type OrderServiceExtServer struct {
	svcCtx *svc.ServiceContext
}

func NewOrderServiceExtServer(svcCtx *svc.ServiceContext) *OrderServiceExtServer {
	return &OrderServiceExtServer{
		svcCtx: svcCtx,
	}
}

// 想看
func (s *OrderServiceExtServer) WantTicket(ctx context.Context, in *pb.WantTicketReq) (*pb.WantTicketRsp, error) {
	l := logic.NewWantTicketLogic(ctx, s.svcCtx)
	return l.WantTicket(in)
}

// 下单
func (s *OrderServiceExtServer) Ticket(ctx context.Context, in *pb.TicketReq) (*pb.TicketRsp, error) {
	l := logic.NewTicketLogic(ctx, s.svcCtx)
	return l.Ticket(in)
}

// 支付
func (s *OrderServiceExtServer) PayOrder(ctx context.Context, in *pb.PayOrderReq) (*pb.PayOrderRsp, error) {
	l := logic.NewPayOrderLogic(ctx, s.svcCtx)
	return l.PayOrder(in)
}

// 取消订单
func (s *OrderServiceExtServer) UndoOrder(ctx context.Context, in *pb.UndoOrderReq) (*pb.UndoOrderRsp, error) {
	l := logic.NewUndoOrderLogic(ctx, s.svcCtx)
	return l.UndoOrder(in)
}

//  根据订单号获取电影票的信息
func (s *OrderServiceExtServer) GetOrderMessage(ctx context.Context, in *pb.GetOrderMessageReq) (*pb.GetOrderMessageRsp, error) {
	l := logic.NewGetOrderMessageLogic(ctx, s.svcCtx)
	return l.GetOrderMessage(in)
}

// 查看所有电影票
func (s *OrderServiceExtServer) LookOrders(ctx context.Context, in *pb.LookOrdersReq) (*pb.LookOrdersRsp, error) {
	l := logic.NewLookOrdersLogic(ctx, s.svcCtx)
	return l.LookOrders(in)
}

// 查看所有看过的电影票
func (s *OrderServiceExtServer) LookAlreadyOrders(ctx context.Context, in *pb.LookAlreadyOrdersReq) (*pb.LookAlreadyOrdersRsp, error) {
	l := logic.NewLookAlreadyOrdersLogic(ctx, s.svcCtx)
	return l.LookAlreadyOrders(in)
}

//  进行评分
func (s *OrderServiceExtServer) OrderComment(ctx context.Context, in *pb.OrderCommentReq) (*pb.OrderCommentRsp, error) {
	l := logic.NewOrderCommentLogic(ctx, s.svcCtx)
	return l.OrderComment(in)
}
