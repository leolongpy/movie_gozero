// Code generated by goctl. DO NOT EDIT!
// Source: film.proto

package server

import (
	"context"

	"movie_gozero/rpc/film/internal/logic"
	"movie_gozero/rpc/film/internal/svc"
	"movie_gozero/rpc/film/pb"
)

type FilmServiceExtServer struct {
	svcCtx *svc.ServiceContext
}

func NewFilmServiceExtServer(svcCtx *svc.ServiceContext) *FilmServiceExtServer {
	return &FilmServiceExtServer{
		svcCtx: svcCtx,
	}
}

//  获取正在售票的影片
func (s *FilmServiceExtServer) HotPlayMovies(ctx context.Context, in *pb.HotPlayMoviesReq) (*pb.HotPlayMoviesRsp, error) {
	l := logic.NewHotPlayMoviesLogic(ctx, s.svcCtx)
	return l.HotPlayMovies(in)
}

//  电影详情
func (s *FilmServiceExtServer) MovieDetail(ctx context.Context, in *pb.MovieDetailReq) (*pb.MovieDetailRsp, error) {
	l := logic.NewMovieDetailLogic(ctx, s.svcCtx)
	return l.MovieDetail(in)
}

//  获取导演与演员信息
func (s *FilmServiceExtServer) MovieCreditsWithTypes(ctx context.Context, in *pb.MovieCreditsWithTypesReq) (*pb.MovieCreditsWithTypesRsp, error) {
	l := logic.NewMovieCreditsWithTypesLogic(ctx, s.svcCtx)
	return l.MovieCreditsWithTypes(in)
}

//  获取海报信息
func (s *FilmServiceExtServer) ImageAll(ctx context.Context, in *pb.ImageAllReq) (*pb.ImageAllRsp, error) {
	l := logic.NewImageAllLogic(ctx, s.svcCtx)
	return l.ImageAll(in)
}

//  正在热映的影片
func (s *FilmServiceExtServer) LocationMovies(ctx context.Context, in *pb.LocationMoviesReq) (*pb.LocationMoviesRsp, error) {
	l := logic.NewLocationMoviesLogic(ctx, s.svcCtx)
	return l.LocationMovies(in)
}

//  即将上映的影片
func (s *FilmServiceExtServer) MovieComingNew(ctx context.Context, in *pb.MovieComingNewReq) (*pb.MovieComingNewRsp, error) {
	l := logic.NewMovieComingNewLogic(ctx, s.svcCtx)
	return l.MovieComingNew(in)
}

//  图片搜索
func (s *FilmServiceExtServer) Search(ctx context.Context, in *pb.SearchReq) (*pb.SearchRsp, error) {
	l := logic.NewSearchLogic(ctx, s.svcCtx)
	return l.Search(in)
}

//  根据影院id和时间获取正在销售的影片信息
func (s *FilmServiceExtServer) GetFilmsByCidADay(ctx context.Context, in *pb.GetFilmsByCidADayReq) (*pb.GetFilmsByCidADayRsp, error) {
	l := logic.NewGetFilmsByCidADayLogic(ctx, s.svcCtx)
	return l.GetFilmsByCidADay(in)
}
